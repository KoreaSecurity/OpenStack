#!/bin/bash

echo -e '\E[40;33m'"\033[1m"[*]  HELLO SYSCORE" \033[0m"
source keystone_source

echo -e '\E[40;31m'"\033[1m"[*]  NEUTRON SETTINGS" \033[0m"


sed -i "s/\[filter:authtoken\]//"g /etc/neutron/api-paste.ini
sed -i "s/paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory//"g /etc/neutron/api-paste.ini




echo "[filter:authtoken]
paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory
auth_host = controller
auth_port = 35357
auth_protocol = http
admin_tenant_name = service
admin_user = neutron
admin_password = openstacktest" >> /etc/neutron/api-paste.ini




echo "[DATABASE]
sql_connection=mysql://neutron:openstacktest@controller/neutron

#Under the OVS section
[OVS]
tenant_network_type = gre
enable_tunneling = True
tunnel_id_ranges = 1:1000
integration_bridge = br-int
tunnel_bridge = br-tun
local_ip = controller

#Firewall driver for realizing neutron security group function
[SECURITYGROUP]
firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver" >>/etc/neutron/plugins/openvswitch/ovs_neutron_plugin.ini




sed -i 's/http:\/\/localhost:5000\/v2.0/http:\/\/controller:5000\/v2.0/g' /etc/neutron/metadata_agent.ini




sed -i 's/%SERVICE_TENANT_NAME%/service/g' /etc/neutron/metadata_agent.ini

sed -i 's/%SERVICE_USER%/neutron/g' /etc/neutron/metadata_agent.ini

sed -i 's/%SERVICE_PASSWORD%/openstacktest/g' /etc/neutron/metadata_agent.ini




echo "nova_metadata_ip = controller

nova_metadata_port = 8775

metadata_proxy_shared_secret = helloOpenStack" >> /etc/neutron/metadata_agent.ini




echo -e '\E[40;31m'"\033[1m"[*]  neutron.conf SETTINGS" \033[0m"

sed -i 's/auth_host = 127.0.0.1/auth_host = controller/g' /etc/neutron/neutron.conf
sed -i 's/admin_tenant_name = %SERVICE_TENANT_NAME%/admin_tenant_name = service/g' /etc/neutron/neutron.conf
sed -i 's/admin_user = %SERVICE_USER%/admin_user = neutron/g' /etc/neutron/neutron.conf
sed -i 's/admin_password = %SERVICE_PASSWORD%/admin_password = openstacktest/g' /etc/neutron/neutron.conf
sed -i 's/connection = sqlite:\/\/\/\/var\/lib\/neutron\/neutron.sqlite/connection = mysql:\/\/neutron:openstacktest@controller\/neutron/g' /etc/neutron/neutron.conf


perl -p -i -e '$.==2 and print "rabbit_host = controller\n"' /etc/neutron/neutron.conf



perl -p -i -e '$.==2 and print "interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver
use_namespaces = True
external_network_bridge = br-ex
signing_dir = /var/cache/neutron
admin_tenant_name = service
admin_user = neutron
admin_password = openstacktest
auth_url = http://controller:35357/v2.0
l3_agent_manager = neutron.agent.l3_agent.L3NATAgentWithStateReport
root_helper = sudo neutron-rootwrap /etc/neutron/rootwrap.conf
interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver\n"' /etc/neutron/l3_agent.ini








perl -p -i -e '$.==2 and print "interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver
dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
use_namespaces = True
signing_dir = /var/cache/neutron
admin_tenant_name = service
admin_user = neutron
admin_password = openstacktest
auth_url = http://controller:35357/v2.0
dhcp_agent_manager = neutron.agent.dhcp_agent.DhcpAgentWithStateReport
root_helper = sudo neutron-rootwrap /etc/neutron/rootwrap.conf
state_path = /var/lib/neutron\n"' /etc/neutron/dhcp_agent.ini





rm /var/lib/neutron/neutron.sqlite
cd /etc/init.d/; for i in $( ls neutron-* ); do sudo service $i restart; cd /root/; done
service dnsmasq restart

neutron agent-list



echo -e '\E[40;33m'"\033[1m"[*]  plz neutron ALL SMILE" \033[0m"




echo -e '\E[40;31m'"\033[1m"[*]  KVM " \033[0m"


sudo modprobe kvm_intel
kvm-ok



echo "cgroup_device_acl = [
"/dev/null", "/dev/full", "/dev/zero",
"/dev/random", "/dev/urandom",
"/dev/ptmx", "/dev/kvm", "/dev/kqemu",
"/dev/rtc", "/dev/hpet","/dev/net/tun"
]" >> /etc/libvirt/qemu.conf

virsh net-destroy default
virsh net-undefine default


echo "listen_tls = 0
listen_tcp = 1
auth_tcp = \"none\"" >> /etc/libvirt/libvirtd.conf

sed -i 's/env libvirtd_opts=\"-d\"/env libvirtd_opts=\"-d -l\"/g' /etc/init/libvirt-bin.conf

sed -i 's/libvirtd_opts=\"-d\"/libvirtd_opts=\"-d -l\"/g' /etc/default/libvirt-bin



echo -e '\E[40;31m'"\033[1m"[*]  NOVA SETTINGS" \033[0m"


echo "[DEFAULT]
logdir=/var/log/nova
state_path=/var/lib/nova
lock_path=/run/lock/nova
verbose=True
api_paste_config=/etc/nova/api-paste.ini
compute_scheduler_driver=nova.scheduler.simple.SimpleScheduler
rabbit_host=controller
nova_url=http://controller:8774/v1.1/
sql_connection=mysql://nova:openstacktest@controller/nova
root_helper=sudo nova-rootwrap /etc/nova/rootwrap.conf

# Auth
use_deprecated_auth=false
auth_strategy=keystone

# Imaging service
glance_api_servers=controller:9292
image_service=nova.image.glance.GlanceImageService

# Vnc configuration
novnc_enabled=true
novncproxy_base_url=http://203.237.143.161:6080/vnc_auto.html
novncproxy_port=6080
vncserver_proxyclient_address=controller
vncserver_listen=0.0.0.0

# Network settings
network_api_class=nova.network.neutronv2.api.API
neutron_url=http://controller:9696
neutron_auth_strategy=keystone
neutron_admin_tenant_name=service
neutron_admin_username=neutron
neutron_admin_password=openstacktest
neutron_admin_auth_url=http://controller:35357/v2.0
libvirt_vif_driver=nova.virt.libvirt.vif.LibvirtHybridOVSBridgeDriver
linuxnet_interface_driver=nova.network.linux_net.LinuxOVSInterfaceDriver
#If you want Neutron + Nova Security groups
#firewall_driver=nova.virt.firewall.NoopFirewallDriver
#security_group_api=neutron
#If you want Nova Security groups only, comment the two lines above and uncomment line -1-.
#-1-firewall_driver=nova.virt.libvirt.firewall.IptablesFirewallDriver

#Metadata
service_neutron_metadata_proxy = True
neutron_metadata_proxy_shared_secret = helloOpenStack
metadata_host = controller
metadata_listen = 0.0.0.0
metadata_listen_porvt = 8775

# Compute #
compute_driver=libvirt.LibvirtDriver

# Cinder #
volume_api_class=nova.volume.cinder.API
osapi_volume_listen_port=5900
cinder_catalog_info=volume:cinder:internalURL" > /etc/nova/nova.conf








echo "[DEFAULT]
libvirt_type=kvm
libvirt_ovs_bridge=br-int
libvirt_vif_type=ethernet
libvirt_vif_driver=nova.virt.libvirt.vif.LibvirtHybridOVSBridgeDriver
libvirt_use_virtio_for_bridges=True" > /etc/nova/nova-compute.conf




cd /etc/init.d/; for i in $( ls nova-* ); do sudo service $i restart; cd /root/;done

rm /var/lib/nova/nova.sqlite
nova-manage db sync

cd /etc/init.d/; for i in $( ls nova-* ); do sudo service $i restart; cd /root/;done

nova-manage service list


echo -e '\E[40;31m'"\033[1m"[*]  Plz ALL Smile  " \033[0m"



echo -e '\E[40;31m'"\033[1m"[*]  Last Cinder " \033[0m"
sed -i 's/false/true/g' /etc/default/iscsitarget
service iscsitarget start
service open-iscsi start


echo "[DEFAULT]
rootwrap_config=/etc/cinder/rootwrap.conf
sql_connection = mysql://cinder:openstacktest@controller/cinder
api_paste_config = /etc/cinder/api-paste.ini

iscsi_helper=tgtadm
volume_name_template = volume-%s
volume_group = cinder-volumes
verbose = True
auth_strategy = keystone
#osapi_volume_listen_port=5900

# Add these when not using the defaults.
rabbit_host = controller
rabbit_port = 5672
state_path = /var/lib/cinder/"> /etc/cinder/cinder.conf

sed -i "s/\[filter:authtoken\]//"g /etc/cinder/api-paste.ini
sed -i "s/paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory//"g /etc/cinder/api-paste.ini
sed -i "s/auth_host = 127.0.0.1//"g /etc/cinder/api-paste.ini
sed -i "s/auth_port = 35357//"g /etc/cinder/api-paste.ini
sed -i "s/auth_protocol = http//"g /etc/cinder/api-paste.ini
sed -i "s/admin_tenant_name = %SERVICE_TENANT_NAME%//"g /etc/cinder/api-paste.ini
sed -i "s/admin_user = %SERVICE_USER%//"g /etc/cinder/api-paste.ini
sed -i "s/admin_password = %SERVICE_PASSWORD%//"g /etc/cinder/api-paste.ini




echo "[filter:authtoken]
paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory
service_protocol = http
service_host = controller
service_port = 5000
auth_host = controller
auth_port = 35357
auth_protocol = http
admin_tenant_name = service
admin_user = cinder
admin_password = openstacktest" >> /etc/cinder/api-paste.ini

rm /var/lib/cinder/cinder.sqlite
cinder-manage db sync
cd /etc/init.d/; for i in $( ls cinder-* ); do sudo service $i restart; cd /root/; done

source keystone_source
nova-manage service list
neutron agent-list



echo -e '\E[40;31m'"\033[1m"[*]  Thank U.. Last Cinder Settings Plz -hand made " \033[0m"